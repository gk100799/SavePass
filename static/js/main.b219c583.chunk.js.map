{"version":3,"sources":["helpers.js","Components/Users.js","Components/AddUser.js","Actions/userActions.js","Components/NavBar.js","Components/HomePage.js","Components/Login.js","Components/SignIn.js","App.js","serviceWorker.js","Reducers/rootReducer.js","index.js"],"names":["backendURL","request","axios","create","baseURL","timeout","axiosInstance","headers","localStorage","getItem","axiosInstanceFormData","interceptors","use","config","error","Promise","reject","response","status","code","console","log","url","EditableCell","editing","dataIndex","title","inputType","children","record","index","restProps","inputNode","Item","name","style","margin","rules","required","message","connect","state","otherProps","users","deleteUser","Form","useForm","form","useState","data","setData","editingKey","setEditingKey","useEffect","isEditing","_id","cancel","save","key","a","validateFields","row","req","username","password","post","then","res","newData","findIndex","item","splice","push","mergedColumns","width","editable","sorter","b","localeCompare","render","_","onClick","marginRight","onConfirm","disabled","setFieldsValue","edit","whiteSpace","map","col","onCell","className","component","components","body","cell","bordered","dataSource","columns","rowClassName","AddUser","addUser","marginTop","layout","onFinish","values","user","resetFields","validateMessages","types","email","number","range","label","type","htmlType","loggedUserAction","useStyles","makeStyles","theme","root","flexGrow","menuButton","spacing","withRouter","props","classes","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Button","removeItem","history","loggedIn","dispatch","deleteUserAction","addUserAction","setUsers","setUsersAction","get","loggedUser","initialValues","remember","setItem","token","success","catch","err","prefix","UserOutlined","placeholder","LockOutlined","paper","display","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","submit","setUsername","setPassword","handle_change","e","target","value","top","Container","maxWidth","CssBaseline","Avatar","noValidate","TextField","fullWidth","id","autoComplete","autoFocus","onChange","preventDefault","handle_login","Grid","container","xs","Box","mt","App","document","basename","process","path","exact","HomePage","SignIn","Boolean","window","location","hostname","match","initState","store","createStore","action","newUsers","filter","Math","random","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0fAGaA,EAAa,0CAEbC,EAAUC,IAAMC,OAAO,CAClCC,QAASJ,EACTK,QAAS,MAGEC,EAAgBJ,IAAMC,OAAO,CACxCC,QAASJ,EACTO,QAAS,CACP,eAAgB,mBAChB,aAAcC,aAAaC,QAAQ,mBAErCJ,QAAS,MAGEK,EAAwBR,IAAMC,OAAO,CAChDC,QAASJ,EACTO,QAAS,CACP,eAAgB,yBAIpBD,EAAcK,aAAaV,QAAQW,KACjC,SAAAC,GACE,OAAOA,KAET,SAAAC,GACE,OAAOC,QAAQC,OAAOF,MAI1BR,EAAcK,aAAaM,SAASL,KAClC,SAAAK,GACE,OAAOA,KAET,SAAAH,GAOE,OAN8B,MAA1BA,EAAMG,SAASC,QAAiC,iBAAfJ,EAAMK,MACvCC,QAAQC,IAAR,mCAAwCP,EAAMD,OAAOS,MAKlDR,KAIXb,EAAQU,aAAaV,QAAQW,KAC3B,SAAAC,GACE,OAAOA,KAET,SAAAC,GACE,OAAOC,QAAQC,OAAOF,MAI1Bb,EAAQU,aAAaM,SAASL,KAC5B,SAAAK,GACE,OAAOA,KAET,SAAAH,GAOE,OAN8B,MAA1BA,EAAMG,SAASC,QAAiC,iBAAfJ,EAAMK,MACvCC,QAAQC,IAAR,mCAAwCP,EAAMD,OAAOS,MAKlDR,KAIXJ,EAAsBC,aAAaV,QAAQW,KACzC,SAAAC,GACE,OAAOA,KAET,SAAAC,GACE,OAAOC,QAAQC,OAAOF,MAI1BJ,EAAsBC,aAAaM,SAASL,KAC1C,SAAAK,GACE,OAAOA,KAET,SAAAH,GACE,OAAOC,QAAQC,OAAOF,M,YClFpBS,EAAe,SAAC,GASf,IARHC,EAQE,EARFA,QACAC,EAOE,EAPFA,UACAC,EAME,EANFA,MACAC,EAKE,EALFA,UAGAC,GAEE,EAJFC,OAIE,EAHFC,MAGE,EAFFF,UACGG,EACD,uFACIC,EAA0B,WAAdL,EAAyB,kBAAC,IAAD,MAAkB,kBAAC,IAAD,MAC7D,OACI,uBAAQI,EACHP,EACG,kBAAC,IAAKS,KAAN,CACIC,KAAMT,EACNU,MAAO,CACHC,OAAQ,GAEZC,MAAO,CACH,CACIC,UAAU,EACVC,QAAQ,gBAAD,OAAkBb,EAAlB,QAIdM,GAGDJ,IAmMpB,IAQeY,eARS,SAACC,EAAOC,GAE5B,MAAO,CACHC,MAAOF,EAAME,MACbD,gBAIOF,EArMf,YAAuC,IAAtBG,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,WAAc,EAGnBC,IAAKC,UAAbC,EAH2B,sBAIVC,mBAASL,GAJC,mBAI3BM,EAJ2B,KAIrBC,EAJqB,OAKEF,mBAAS,IALX,mBAK3BG,EAL2B,KAKfC,EALe,KAOlCC,qBAAU,WACNH,EAAQP,KACT,CAACA,IAEJ,IAAMW,EAAY,SAAAzB,GAAM,OAAIA,EAAO0B,MAAQJ,GAYrCK,EAAS,WACXJ,EAAc,KAGZK,EAAI,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,+EAEaZ,EAAKa,iBAFlB,OAECC,EAFD,OAGCC,EAAM,CACRP,IAAKG,EACLxB,KAAM2B,EAAI3B,KACV6B,SAAUF,EAAIE,SACdC,SAAUH,EAAIG,UAElB1D,EAAc2D,KAAK,iBAAkBH,GAChCI,MAAK,SAAAC,GACF,IAAMC,EAAO,YAAOnB,GACdnB,EAAQsC,EAAQC,WAAU,SAAAC,GAAI,OAAIZ,IAAQY,EAAKf,OAErD,GAAIzB,GAAS,EAAG,CACZ,IAAMwC,EAAOF,EAAQtC,GACrBsC,EAAQG,OAAOzC,EAAO,EAAtB,2BAA8BwC,GAAST,IACvCX,EAAQkB,GACRhB,EAAc,SAEdgB,EAAQI,KAAKX,GACbX,EAAQkB,GACRhB,EAAc,OAtBrB,gDA0BLhC,QAAQC,IAAI,mBAAZ,MA1BK,yDAAH,sDAuGJoD,EApEU,CACZ,CACI/C,MAAO,OACPD,UAAW,OACXiD,MAAO,MACPC,UAAU,EACVC,OAAQ,SAACjB,EAAGkB,GAAJ,OAAUlB,EAAEzB,KAAK4C,cAAcD,EAAE3C,QAE7C,CACIR,MAAO,WACPD,UAAW,WACXiD,MAAO,MACPC,UAAU,GAEd,CACIjD,MAAO,WACPD,UAAW,WACXiD,MAAO,MACPC,UAAU,GAEd,CACIjD,MAAO,aACPgD,MAAO,MACPjD,UAAW,YACXsD,OAAQ,SAACC,EAAGnD,GAGR,OADiByB,EAAUzB,GAEvB,8BACI,uBAEIoD,QAAS,kBAAMxB,EAAK5B,EAAO0B,MAC3BpB,MAAO,CACH+C,YAAa,IAJrB,QASA,kBAAC,IAAD,CAAYxD,MAAM,kBAAkByD,UAAW3B,GAC3C,uCAIJ,oCACI,uBAAG4B,SAAyB,KAAfjC,EAAmB8B,QAAS,kBA7FpD,SAAApD,GACTkB,EAAKsC,eAAL,aACItB,SAAU,GACVC,SAAU,GACV9B,KAAM,IACHL,IAEPuB,EAAcvB,EAAO0B,KAsF8C+B,CAAKzD,KAApD,QAGA,0BAAMM,MAAO,CAAEoD,WAAY,QAA3B,oBACA,kBAAC,IAAD,CAAY7D,MAAM,kBAAkByD,UAAW,kBArDhD5B,EAqDoE1B,EAAO0B,SApD9FjD,EAAc2D,KAAK,iBAAkB,CAAEV,IAAKA,IACvCW,MAAK,SAAAC,GAAG,OAAIvB,EAAWW,MAFV,IAACA,IAsDK,0CAmBEiC,KAAI,SAAAC,GAC9B,OAAKA,EAAId,SAGF,2BACAc,GADP,IAEIC,OAAQ,SAAA7D,GAAM,MAAK,CACfA,SAEAF,UAAW,OACXF,UAAWgE,EAAIhE,UACfC,MAAO+D,EAAI/D,MACXF,QAAS8B,EAAUzB,OAVhB4D,KA0Bf,OACI,yBAAKE,UAAU,SAGX,kBAAC,IAAD,CAAM5C,KAAMA,EAAM6C,WAAW,GACzB,kBAAC,IAAD,CACIC,WAAY,CACRC,KAAM,CACFC,KAAMxE,IAGdyE,UAAQ,EACRC,WAAYhD,EACZiD,QAASzB,EACT0B,aAAa,sB,eChNlB,SAASC,EAAT,GAA+B,IAAZC,EAAW,EAAXA,QAAW,EAE1BxD,IAAKC,UAAbC,EAFkC,oBA2BzC,OACI,yBAAK4C,UAAU,QACX,wBAAIxD,MAAO,CAAEmE,UAAW,MAAOpB,YAAa,SAA5C,aACA,kBAAC,IAAD,CACInC,KAAMA,EACNwD,OAAO,SACPrE,KAAK,UACLsE,SAnBK,SAAAC,GAEb,IAAMC,EAAO,CACTxE,KAAMuE,EAAOvE,KACb6B,SAAU0C,EAAO1C,SACjBC,SAAUyC,EAAOzC,UAErB1D,EAAc2D,KAAK,eAAgByC,GAC9BxC,MAAK,SAAAC,GAAG,OAAIkC,EAAQK,MACzB3D,EAAK4D,eAWGC,iBA/Ba,CACrBtE,SAAU,wBACVuE,MAAO,CACHC,MAAO,kCACPC,OAAQ,sCAEZA,OAAQ,CACJC,MAAO,gDA0BH,kBAAC,IAAK/E,KAAN,CAAWC,KAAM,CAAC,QAAS+E,MAAM,OAAO5E,MAAO,CAAC,CAAEC,UAAU,KACxD,kBAAC,IAAD,OAEJ,kBAAC,IAAKL,KAAN,CAAWC,KAAM,CAAC,YAAa+E,MAAM,WAAW5E,MAAO,CAAC,CAAEC,UAAU,KAChE,kBAAC,IAAD,OAEJ,kBAAC,IAAKL,KAAN,CAAWC,KAAM,CAAC,YAAa+E,MAAM,WAAW5E,MAAO,CAAC,CAAEC,UAAU,KAChE,kBAAC,IAAD,OAEJ,kBAAC,IAAKL,KAAN,KACI,kBAAC,IAAD,CAAQiF,KAAK,UAAUC,SAAS,UAAhC,aCpDb,IAcMC,EAAmB,SAACnE,GAC7B,MAAO,CACHiE,KAAM,cACNjE,S,wECNFoE,G,OAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVxC,YAAaqC,EAAMI,QAAQ,IAE7BjG,MAAO,CACL+F,SAAU,QA6BCG,mBAzBf,SAAgBC,GACd,IAAMC,EAAUT,IAOhB,OACE,yBAAK1B,UAAWmC,EAAQN,MACtB,kBAACO,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,KAAK,QAAQxC,UAAWmC,EAAQJ,WAAYU,MAAM,UAAUC,aAAW,QACjF,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAK5C,UAAWmC,EAAQpG,OAA5C,YAGA,kBAAC8G,EAAA,EAAD,CAAQvD,QAfK,WACnBzE,aAAaiI,WAAW,kBACxBZ,EAAMa,QAAQlE,KAAK,MAakB4D,MAAM,WAArC,gBC2BK5F,eAfS,SAACC,GAErB,MAAO,CACHkG,SAAUlG,EAAMkG,aAIG,SAACC,GACxB,MAAO,CACHhG,WAAY,SAACW,GAAUqF,EF9DC,SAACrF,GAC7B,MAAO,CACH2D,KAAM,cACN3D,OE2DgCsF,CAAiBtF,KACjD8C,QAAS,SAACK,GAAWkC,EFxDA,SAAClC,GAC1B,MAAO,CACHQ,KAAM,WACNR,QEqD8BoC,CAAcpC,KAC5CqC,SAAU,SAACpG,GAAYiG,EF3CD,SAACjG,GAC3B,MAAO,CACHuE,KAAM,YACNvE,SEwCgCqG,CAAerG,QAIxCH,EAxDE,SAACqF,GAgBd,OAfAxE,qBAAU,WACF7C,aAAaC,QAAQ,kBACrBR,EAAQgJ,IAAI,UAAW,CACnB1I,QAAS,CACL,aAAcC,aAAaC,QAAQ,qBAGtCyD,MAAK,SAAAC,GACF0D,EAAMkB,SAAS5E,EAAIlB,SAG3B4E,EAAMa,QAAQlE,KAAK,OAExB,IAGC,yBAAKmB,UAAU,OACX,kBAAC,EAAD,MAOA,6BACA,6BACA,kBAAC,EAAD,CAASU,QAASwB,EAAMxB,UAIxB,6BACA,6BACA,kBAAC,EAAD,CAAOzD,WAAYiF,EAAMjF,iB,qCC6CtBJ,aAZS,SAACC,GACrB,MAAO,MAKgB,SAACmG,GACxB,MAAO,CACHM,WAAY,SAACjG,GAAW2F,EAASxB,EAAiBnE,QAI3CT,EAjFD,SAACqF,GACXxE,qBAAU,WACF7C,aAAaC,QAAQ,mBACrBH,EAAc2I,IAAI,2BACb/E,MAAK,SAAAC,GAAG,OAAI0D,EAAMa,QAAQlE,KAAK,cAEzC,IAkBH,OACI,kBAAC,IAAD,CACItC,KAAK,eACLyD,UAAU,aACVwD,cAAe,CACXC,UAAU,GAEd5C,SAxBS,SAACC,GACdrF,QAAQC,IAAI,4BAA6BoF,GACzC,IAAIxD,EAAO,CACP,SAAYwD,EAAO1C,SACnB,SAAY0C,EAAOzC,UAEvB/D,EAAQgE,KAAK,eAAgBhB,GACxBiB,KADL,uCACU,WAAOC,GAAP,SAAAR,EAAA,sEACInD,aAAa6I,QAAQ,iBAAkBlF,EAAIlB,KAAKqG,OADpD,OAEFzB,EAAMqB,WAAW,CAAEhH,KAAMiC,EAAIlB,KAAKf,KAAMyG,UAAU,IAFhD,2CADV,uDAKKzE,MAAK,SAAAC,GAAG,OAAI0D,EAAMa,QAAQlE,KAAK,YAC/BN,MAAK,SAAAC,GAAG,OAAI5B,IAAQgH,QAAQ,8BAC5BrF,MAAK,SAAAC,GAAG,OAAI/C,QAAQC,IAAI,gBACxBmI,OAAM,SAAAC,GAAG,OAAIlH,IAAQzB,MAAM,4BAY5B,kBAAC,IAAKmB,KAAN,CACIC,KAAK,WACLG,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,iCAIjB,kBAAC,IAAD,CAAOmH,OAAQ,kBAACC,EAAA,EAAD,CAAchE,UAAU,wBAA0BiE,YAAY,cAEjF,kBAAC,IAAK3H,KAAN,CACIC,KAAK,WACLG,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,iCAIjB,kBAAC,IAAD,CACImH,OAAQ,kBAACG,EAAA,EAAD,CAAclE,UAAU,wBAChCuB,KAAK,WACL0C,YAAY,cAIpB,kBAAC,IAAK3H,KAAN,KACI,kBAAC,IAAD,CAAQiF,KAAK,UAAUC,SAAS,SAASxB,UAAU,qBAAnD,e,iFClDV0B,GAAYC,aAAW,SAACC,GAAD,YAAY,CACrCuC,OAAK,GACDxD,UAAWiB,EAAMI,QAAQ,GACzBoC,QAAS,OACTC,cAAe,SACfC,WAAY,UAJX,0BAKU,QALV,2BAMW,QANX,GAQLC,OAAQ,CACJ9H,OAAQmF,EAAMI,QAAQ,GACtBwC,gBAAiB5C,EAAM6C,QAAQC,UAAUC,MAE7CvH,KAAM,CACF2B,MAAO,OACP4B,UAAWiB,EAAMI,QAAQ,IAE7B4C,OAAQ,CACJnI,OAAQmF,EAAMI,QAAQ,EAAG,EAAG,QAoHpC,IAaenF,gBAbS,SAACC,EAAOoF,GAC5B,MAAO,CAEHA,YAImB,SAACe,GACxB,MAAO,CACHM,WAAY,SAACjG,GAAW2F,EAASxB,EAAiBnE,QAI3CT,CAA6CoF,aA1H5D,SAAgBC,GACZ,IAAMC,EAAUT,KADG,EAEarE,mBAAS,IAFtB,mBAEZe,EAFY,KAEFyG,EAFE,OAGaxH,mBAAS,IAHtB,mBAGZgB,EAHY,KAGFyG,EAHE,KAKnBpH,qBAAU,WACF7C,aAAaC,QAAQ,mBACrBH,EAAc2I,IAAI,2BACb/E,MAAK,SAAAC,GAAG,OAAI0D,EAAMa,QAAQlE,KAAK,cAEzC,IAEH,IAAMkG,EAAgB,SAAAC,GAClB,IAAMzI,EAAOyI,EAAEC,OAAO1I,KAChB2I,EAAQF,EAAEC,OAAOC,MACd,aAAT3I,EAAsBsI,EAAYK,GAASJ,EAAYI,IAwB3D,OArBAtI,IAAQ1B,OAAO,CACXiK,IAAK,KAqBL,kBAACC,GAAA,EAAD,CAAWnF,UAAU,OAAOoF,SAAS,MACjC,kBAACC,EAAA,EAAD,MACA,yBAAKtF,UAAWmC,EAAQgC,OACpB,kBAACoB,EAAA,EAAD,CAAQvF,UAAWmC,EAAQoC,QACvB,kBAAC,KAAD,OAEJ,kBAAC5B,EAAA,EAAD,CAAY1C,UAAU,KAAK2C,QAAQ,MAAnC,WAGA,0BAAM5C,UAAWmC,EAAQ/E,KAAMoI,YAAU,GACrC,kBAACC,EAAA,EAAD,eACI7C,QAAQ,WACRnG,OAAO,SACPE,UAAQ,EACR+I,WAAS,EACTC,GAAG,QACHrE,MAAM,WACN/E,KAAK,WACLqJ,aAAa,SACTxH,EATR,CAUIyH,WAAS,EACTC,SAAUf,KAEd,kBAACU,EAAA,EAAD,eACI7C,QAAQ,WACRnG,OAAO,SACPE,UAAQ,EACR+I,WAAS,EACTnJ,KAAK,WACL+E,MAAM,WACNC,KAAK,WACLoE,GAAG,WACHC,aAAa,oBACTvH,EAVR,CAWIyH,SAAUf,KAEd,kBAAClC,EAAA,EAAD,CACItB,KAAK,SACLmE,WAAS,EACT9C,QAAQ,YACRH,MAAM,UACNzC,UAAWmC,EAAQyC,OACnBtF,QAAS,SAAA0F,GAAC,OA5DT,SAACA,GAClBA,EAAEe,iBACF,IAAIzI,EAAO,CACP,SAAYc,EACZ,SAAYC,GAEhB/D,EAAQgE,KAAK,eAAgBhB,GACxBiB,KADL,uCACU,WAAOC,GAAP,SAAAR,EAAA,sEACInD,aAAa6I,QAAQ,iBAAkBlF,EAAIlB,KAAKqG,OADpD,OAEFzB,EAAMqB,WAAW,CAAEhH,KAAMiC,EAAIlB,KAAKf,KAAMyG,UAAU,IAFhD,2CADV,uDAKKzE,MAAK,SAAAC,GAAG,OAAI0D,EAAMa,QAAQlE,KAAK,YAC/BN,MAAK,SAAAC,GAAG,OAAI5B,IAAQgH,QAAQ,8BAC5BrF,MAAK,SAAAC,GAAG,OAAI/C,QAAQC,IAAI,gBACxBmI,OAAM,SAAAC,GAAG,OAAIlH,IAAQzB,MAAM,0BA8CF6K,CAAahB,KAN/B,WAUA,kBAACiB,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAMtH,MAAI,EAACwH,IAAE,GACT,kBAAC,IAAD,CAAMvD,QAAQ,SAAd,qBAIJ,kBAACqD,EAAA,EAAD,CAAMtH,MAAI,GACN,2BACI,kBAAC,IAAD,4CAQpB,kBAACyH,EAAA,EAAD,CAAKC,GAAI,SC9HNC,GAbH,SAACpE,GAIX,OAHAxE,qBAAU,WACR6I,SAASxK,MAAQ,aAChB,IAED,kBAAC,IAAD,CAAQyK,SAAUC,aAChB,kBAAC,IAAD,CAAOC,KAAK,QAAQC,OAAK,EAAC1G,UAAW2G,IACrC,kBAAC,IAAD,CAAOF,KAAK,IAAIC,OAAK,EAAC1G,UAAW4G,OCHnBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,cClBAC,GAAY,CACdnK,MAAO,GAIPgG,UAAU,EACVzG,KAAM,I,WCIJ6K,GAAQC,cDDC,WAAiD,IAA5BvK,EAA2B,uDAAnBqK,GAAWG,EAAQ,uCAC3D,GAAmB,gBAAhBA,EAAO/F,KAAwB,CAC9B,IAAIgG,EAAWzK,EAAME,MAAMwK,QAAO,SAAAzG,GAAI,OAAIuG,EAAO1J,MAAQmD,EAAKnD,OAC9D,OAAO,2BACAd,GADP,IAEIE,MAAOuK,IAIf,GAAmB,aAAhBD,EAAO/F,KAAqB,CAC3B,IAAIR,EAAOuG,EAAOvG,KAGlB,OADAA,EAAKnD,IAAM6J,KAAKC,SACT,2BACA5K,GADP,IAEIE,MAAM,GAAD,mBAAMF,EAAME,OAAZ,CAAkB+D,MAI/B,MAAmB,gBAAhBuG,EAAO/F,KAGC,2BACAzE,GADP,IAEIkG,SAAUsE,EAAOhK,KAAK0F,SACtBzG,KAAM+K,EAAOhK,KAAKf,OAIP,cAAhB+K,EAAO/F,KAGC,2BACAzE,GADP,IAEIE,MAAOsK,EAAOtK,QAKlBF,KCpCR6K,IAASvI,OACP,kBAAC,IAAD,CAAUgI,MAAOA,IACf,kBAAC,GAAD,OAEFb,SAASqB,eAAe,SFmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxJ,MAAK,SAAAyJ,GACJA,EAAaC,gBAEdpE,OAAM,SAAA1I,GACLM,QAAQN,MAAMA,EAAMyB,c","file":"static/js/main.b219c583.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// export const backendURL = \"http://localhost:4000\";\r\nexport const backendURL = \"https://savepass-backend.herokuapp.com/\";\r\n\r\nexport const request = axios.create({\r\n  baseURL: backendURL,\r\n  timeout: 10000\r\n});\r\n\r\nexport const axiosInstance = axios.create({\r\n  baseURL: backendURL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    \"auth-token\": localStorage.getItem('savepass-token')\r\n  },\r\n  timeout: 10000\r\n});\r\n\r\nexport const axiosInstanceFormData = axios.create({\r\n  baseURL: backendURL,\r\n  headers: {\r\n    \"Content-Type\": \"multipart/form-data\"\r\n  }\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n  config => {\r\n    return config;\r\n  },\r\n  error => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxiosInstance.interceptors.response.use(\r\n  response => {\r\n    return response;\r\n  },\r\n  error => {\r\n    if (error.response.status === 408 || error.code === 'ECONNABORTED') {\r\n        console.log(`A timeout happend on url ${error.config.url}`)\r\n      }\r\n    // if (error.response.status === 401 || error.code === 'Unauthorized') {\r\n    //   window.location.href = \"\"\r\n    // }\r\n    return error;\r\n  }\r\n);\r\n\r\nrequest.interceptors.request.use(\r\n  config => {\r\n    return config;\r\n  },\r\n  error => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nrequest.interceptors.response.use(\r\n  response => {\r\n    return response;\r\n  },\r\n  error => {\r\n    if (error.response.status === 408 || error.code === 'ECONNABORTED') {\r\n        console.log(`A timeout happend on url ${error.config.url}`)\r\n      }\r\n    // if (error.response.status === 401 || error.code === 'Unauthorized') {\r\n    //   window.location.href = \"/\"\r\n    // }\r\n    return error;\r\n  }\r\n);\r\n\r\naxiosInstanceFormData.interceptors.request.use(\r\n  config => {\r\n    return config;\r\n  },\r\n  error => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxiosInstanceFormData.interceptors.response.use(\r\n  response => {\r\n    return response;\r\n  },\r\n  error => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Table, Input, InputNumber, Popconfirm, Form } from 'antd';\r\nimport './Users.css'\r\nimport { axiosInstance, request } from '../helpers'\r\nimport { connect } from 'react-redux'\r\n\r\nconst EditableCell = ({\r\n    editing,\r\n    dataIndex,\r\n    title,\r\n    inputType,\r\n    record,\r\n    index,\r\n    children,\r\n    ...restProps\r\n}) => {\r\n    const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\r\n    return (\r\n        <td {...restProps}>\r\n            {editing ? (\r\n                <Form.Item\r\n                    name={dataIndex}\r\n                    style={{\r\n                        margin: 0,\r\n                    }}\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: `Please Input ${title}!`,\r\n                        },\r\n                    ]}\r\n                >\r\n                    {inputNode}\r\n                </Form.Item>\r\n            ) : (\r\n                    children\r\n                )}\r\n        </td>\r\n    );\r\n};\r\n\r\nfunction Users({ users, deleteUser }) {\r\n\r\n    // console.log(users);\r\n    const [form] = Form.useForm();\r\n    const [data, setData] = useState(users);\r\n    const [editingKey, setEditingKey] = useState('');\r\n\r\n    useEffect(() => {\r\n        setData(users)\r\n    }, [users])\r\n\r\n    const isEditing = record => record._id === editingKey;\r\n\r\n    const edit = record => {\r\n        form.setFieldsValue({\r\n            username: '',\r\n            password: '',\r\n            name: '',\r\n            ...record,\r\n        });\r\n        setEditingKey(record._id);\r\n    };\r\n\r\n    const cancel = () => {\r\n        setEditingKey('');\r\n    };\r\n\r\n    const save = async key => {\r\n        try {\r\n            const row = await form.validateFields();\r\n            const req = {\r\n                _id: key,\r\n                name: row.name,\r\n                username: row.username,\r\n                password: row.password\r\n            }\r\n            axiosInstance.post('account/modify', req)\r\n                .then(res => {\r\n                    const newData = [...data];\r\n                    const index = newData.findIndex(item => key === item._id);\r\n\r\n                    if (index > -1) {\r\n                        const item = newData[index];\r\n                        newData.splice(index, 1, { ...item, ...row });\r\n                        setData(newData);\r\n                        setEditingKey('');\r\n                    } else {\r\n                        newData.push(row);\r\n                        setData(newData);\r\n                        setEditingKey('');\r\n                    }\r\n                })\r\n            } catch (errInfo) {\r\n            console.log('Validate Failed:', errInfo);\r\n        }\r\n    };\r\n\r\n    const handleConfirm = (_id) => {\r\n        axiosInstance.post('account/delete', { _id: _id })\r\n            .then(res => deleteUser(_id))\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            width: '20%',\r\n            editable: true,\r\n            sorter: (a, b) => a.name.localeCompare(b.name),\r\n        },\r\n        {\r\n            title: 'Username',\r\n            dataIndex: 'username',\r\n            width: '25%',\r\n            editable: true,\r\n        },\r\n        {\r\n            title: 'Password',\r\n            dataIndex: 'password',\r\n            width: '20%',\r\n            editable: true,\r\n        },\r\n        {\r\n            title: 'Operations',\r\n            width: '20%',\r\n            dataIndex: 'operation',\r\n            render: (_, record) => {\r\n                // console.log(record)\r\n                const editable = isEditing(record);\r\n                return editable ? (\r\n                    <span>\r\n                        <a\r\n                            // href=\"javascript:;\"\r\n                            onClick={() => save(record._id)}\r\n                            style={{\r\n                                marginRight: 8,\r\n                            }}\r\n                        >\r\n                            Save\r\n                        </a>\r\n                        <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\r\n                            <a>Cancel</a>\r\n                        </Popconfirm>\r\n                    </span>\r\n                ) : (\r\n                        <>\r\n                            <a disabled={editingKey !== ''} onClick={() => edit(record)}>\r\n                                Edit\r\n                            </a>\r\n                            <span style={{ whiteSpace: \"pre\" }}>                </span>\r\n                            <Popconfirm title=\"Sure to delete?\" onConfirm={() => handleConfirm(record._id)}>\r\n                                <a>Delete</a>\r\n                            </Popconfirm>\r\n                        </>\r\n                    );\r\n            },\r\n        },\r\n        // {\r\n        //     title: 'Delete',\r\n        //     width: '20%',\r\n        //     dataIndex: 'operation',\r\n        //     render: (text, record) =>\r\n        //         data.length >= 1 ? (\r\n        //             <Popconfirm title=\"Sure to delete?\" onConfirm={() => deleteUser(record._id)}>\r\n        //                 <a>Delete</a>\r\n        //             </Popconfirm>\r\n        //         ) : null,\r\n        // },\r\n    ];\r\n\r\n    const mergedColumns = columns.map(col => {\r\n        if (!col.editable) {\r\n            return col;\r\n        }\r\n        return {\r\n            ...col,\r\n            onCell: record => ({\r\n                record,\r\n                // inputType: col.dataIndex === 'age' ? 'number' : 'text',\r\n                inputType: 'text',\r\n                dataIndex: col.dataIndex,\r\n                title: col.title,\r\n                editing: isEditing(record),\r\n            }),\r\n        };\r\n    });\r\n\r\n    // const userList = users.length ? (\r\n    //     users.map(user => {\r\n    //         return (\r\n    //             <div className=\"userList\" key={user._id}>\r\n    //                 <span onClick={() => { deleteUser(user._id) }}>{user.username}</span>\r\n    //             </div>\r\n    //         )\r\n    //     })\r\n    // ) : (\r\n    //         <p className=\"noUsers\">There are no Users to display!</p>\r\n    //     )\r\n    return (\r\n        <div className=\"table\">\r\n\r\n            {/* {userList} */}\r\n            <Form form={form} component={false}>\r\n                <Table\r\n                    components={{\r\n                        body: {\r\n                            cell: EditableCell,\r\n                        },\r\n                    }}\r\n                    bordered\r\n                    dataSource={data}\r\n                    columns={mergedColumns}\r\n                    rowClassName=\"editable-row\"\r\n                // pagination={{\r\n                //     onChange: cancel,\r\n                // }}\r\n                />\r\n            </Form>\r\n            {/* <br /> */}\r\n            {/* <br /> */}\r\n            {/* <div className=\"add-btn\">\r\n                <Button type=\"primary\" shape=\"round\" icon={<add />} size=\"large\">\r\n                    Add item\r\n                </Button>    */}\r\n            {/* </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, otherProps) => {\r\n    // console.log(state.users)\r\n    return {\r\n        users: state.users,\r\n        otherProps\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Users);\r\n","import React, { useState } from 'react'\r\nimport { Form, Input, Button, Radio } from 'antd';\r\nimport { axiosInstance, request } from '../helpers'\r\nimport './AddUser.css'\r\n\r\nexport default function AddUser({ addUser }) {\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const validateMessages = {\r\n        required: '${label} is required!',\r\n        types: {\r\n            email: '${label} is not validate email!',\r\n            number: '${label} is not a validate number!',\r\n        },\r\n        number: {\r\n            range: '${label} must be between ${min} and ${max}',\r\n        },\r\n    };\r\n\r\n    const onFinish = values => {\r\n        // console.log(values);\r\n        const user = {\r\n            name: values.name,\r\n            username: values.username,\r\n            password: values.password\r\n        }\r\n        axiosInstance.post('/account/add', user)\r\n            .then(res => addUser(user))\r\n        form.resetFields();\r\n    };\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <h3 style={{ marginTop: '3px', marginRight: '30px' }} >Add Item:</h3>\r\n            <Form\r\n                form={form}\r\n                layout=\"inline\"\r\n                name=\"addUser\"\r\n                onFinish={onFinish}\r\n                validateMessages={validateMessages}\r\n            >\r\n                <Form.Item name={['name']} label=\"Name\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={['username']} label=\"Username\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name={['password']} label=\"Password\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item >\r\n                    <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\r\n                </Form.Item>\r\n            </Form>\r\n            {/* <form onSubmit={handleSubmit}>\r\n                <label>Add a new User:</label>\r\n                <Input type=\"text\" name=\"username\" onChange={handleChange} value={user.username} />\r\n                <Input type=\"text\" name=\"password\" onChange={handleChange} value={user.password} />\r\n                <Input type=\"submit\" value=\"Add\" />\r\n            </form> */}\r\n        </div>\r\n    )\r\n}\r\n","export const deleteUserAction = (_id) => {\r\n    return {\r\n        type: 'DELETE_USER',\r\n        _id\r\n    }\r\n}\r\n\r\nexport const addUserAction = (user) => {\r\n    return {\r\n        type: 'ADD_USER',\r\n        user\r\n    }\r\n}\r\n\r\nexport const loggedUserAction = (data) => {\r\n    return {\r\n        type: 'LOGGED_USER',\r\n        data\r\n    }\r\n}\r\n\r\nexport const setUsersAction = (users) => {\r\n    return {\r\n        type: 'SET_USERS',\r\n        users\r\n    }\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { withRouter } from 'react-router-dom'\r\nimport './NavBar.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction NavBar(props) {\r\n  const classes = useStyles();\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('savepass-token');\r\n    props.history.push('/')\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            SavePass \r\n          </Typography>\r\n          <Button onClick={handleLogout} color=\"inherit\">Logout</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(NavBar)","import React, { useState, useEffect } from 'react';\r\nimport './HomePage.css';\r\nimport Users from './Users'\r\nimport AddUser from './AddUser'\r\nimport { connect } from 'react-redux'\r\nimport { deleteUserAction, addUserAction, setUsersAction } from '../Actions/userActions'\r\nimport { Button } from 'antd'\r\nimport NavBar from './NavBar'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { axiosInstance, request } from '../helpers'\r\n// import add from './add-button.svg'\r\n\r\nconst HomePage = (props) => {\r\n    useEffect(() => {\r\n        if (localStorage.getItem('savepass-token')) {\r\n            request.get('account', {\r\n                headers: {\r\n                    \"auth-token\": localStorage.getItem('savepass-token'),\r\n                }\r\n            })\r\n                .then(res => {\r\n                    props.setUsers(res.data)\r\n                })\r\n        } else {\r\n            props.history.push('/')\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <NavBar />\r\n            {/* <div className=\"logout\">\r\n            <Button>\r\n                Logout\r\n            </Button> */}\r\n            {/* </div> */}\r\n            {/* <h1 className=\"Heading\" style={{ marginBottom: '40px' }}>DETAILS</h1> */}\r\n            <br />\r\n            <br />\r\n            <AddUser addUser={props.addUser} />\r\n            {/* <Button type=\"primary\" shape=\"round\" icon={<add />} size=\"large\">\r\n                Download\r\n            </Button> */}\r\n            <br />\r\n            <br />\r\n            <Users deleteUser={props.deleteUser} />\r\n            {/* <br /> */}\r\n            {/* <br /> */}\r\n            {/* <AddUser addUser={props.addUser} /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // console.log(state.loggedIn)\r\n    return {\r\n        loggedIn: state.loggedIn\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteUser: (_id) => { dispatch(deleteUserAction(_id)) },\r\n        addUser: (user) => { dispatch(addUserAction(user)) },\r\n        setUsers: (users) => { dispatch(setUsersAction(users)) },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import React, { useEffect } from 'react'\r\nimport { Form, Input, Button, Checkbox, message } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { axiosInstance, request } from '../helpers'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { loggedUserAction } from '../Actions/userActions'\r\nimport { connect } from 'react-redux'\r\nimport './Login.css'\r\n\r\nconst Login = (props) => {\r\n    useEffect(() => {\r\n        if (localStorage.getItem('savepass-token')) {\r\n            axiosInstance.get('user/login/currentUser/')\r\n                .then(res => props.history.push('/home'))\r\n        }\r\n    }, []);\r\n    const onFinish = (values) => {\r\n        console.log('Received values of form: ', values);\r\n        let data = {\r\n            \"username\": values.username,\r\n            \"password\": values.password,\r\n        }\r\n        request.post('/user/login/', data)\r\n            .then(async (res) => {\r\n                await localStorage.setItem('savepass-token', res.data.token);\r\n                props.loggedUser({ name: res.data.name, loggedIn: true })\r\n            })\r\n            .then(res => props.history.push('/home'))\r\n            .then(res => message.success(\"Logged in successfully!\"))\r\n            .then(res => console.log(\"Logged In\"))\r\n            .catch(err => message.error(\"Invalid Credentials\"));\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            name=\"normal_login\"\r\n            className=\"login-form\"\r\n            initialValues={{\r\n                remember: true,\r\n            }}\r\n            onFinish={onFinish}\r\n        >\r\n            <Form.Item\r\n                name=\"username\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your Username!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your Password!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                    Log in\r\n        </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        //   users: state.users\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        loggedUser: (data) => { dispatch(loggedUserAction(data)) },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { useState, useEffect } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Link } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n// import PropTypes from 'prop-types';\r\nimport { axiosInstance, request } from '../helpers'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { message } from 'antd';\r\nimport { loggedUserAction } from '../Actions/userActions'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        marginTop: '40px',\r\n        marginLeft: '20px',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n\r\n\r\n\r\n}));\r\n\r\nfunction SignIn(props) {\r\n    const classes = useStyles();\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('savepass-token')) {\r\n            axiosInstance.get('user/login/currentUser/')\r\n                .then(res => props.history.push('/home'))\r\n        }\r\n    }, []);\r\n\r\n    const handle_change = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        name === \"username\" ? setUsername(value) : setPassword(value)\r\n    };\r\n\r\n    message.config({\r\n        top: 80,\r\n    })\r\n\r\n    const handle_login = (e) => {\r\n        e.preventDefault();\r\n        let data = {\r\n            \"username\": username,\r\n            \"password\": password,\r\n        }\r\n        request.post('/user/login/', data)\r\n            .then(async (res) => {\r\n                await localStorage.setItem('savepass-token', res.data.token);\r\n                props.loggedUser({ name: res.data.name, loggedIn: true })\r\n            })\r\n            .then(res => props.history.push('/home'))\r\n            .then(res => message.success(\"Logged in successfully!\"))\r\n            .then(res => console.log(\"Logged In\"))\r\n            .catch(err => message.error(\"Invalid Credentials\"));\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n        </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Username\"\r\n                        name=\"username\"\r\n                        autoComplete=\"email\"\r\n                        {...username}\r\n                        autoFocus\r\n                        onChange={handle_change}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        {...password}\r\n                        onChange={handle_change}\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={e => handle_login(e)}\r\n                    >\r\n                        Sign In\r\n          </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <Link variant=\"body2\">\r\n                                Forgot password?\r\n              </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <a>\r\n                                <Link >\r\n                                    Don't have an account? Sign Up\r\n              </Link>\r\n                            </a>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={5}>\r\n            </Box>\r\n        </Container>\r\n\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    return {\r\n        //   users: state.users\r\n        props\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        loggedUser: (data) => { dispatch(loggedUserAction(data)) },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SignIn));","import React, { useState, useEffect } from 'react';\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\nimport './App.css';\nimport HomePage from './Components/HomePage'\nimport Login from './Components/Login'\nimport SignIn from './Components/SignIn'\n\n\nconst App = (props) => {\n  useEffect(() => {\n    document.title = 'SavePass';\n  }, [])\n  return (\n    <Router basename={process.env.PUBLIC_URL} >\n      <Route path=\"/home\" exact component={HomePage} />\n      <Route path=\"/\" exact component={SignIn} />\n    </Router>\n  )\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    users: [\r\n        // { _id: 1, name: 'Google', username: 'Gopal Krishna', password: '123' },\r\n        // { _id: 2, name: 'Facebook', username: 'Rajat Jain', password: '123' }\r\n    ],\r\n    loggedIn: false,\r\n    name: ''\r\n}\r\n\r\nexport default function rootReducer(state = initState, action) {\r\n    if(action.type === 'DELETE_USER') {\r\n        let newUsers = state.users.filter(user => action._id !== user._id)\r\n        return {\r\n            ...state,\r\n            users: newUsers\r\n        }\r\n    }\r\n\r\n    if(action.type === 'ADD_USER') {\r\n        let user = action.user\r\n        // console.log(user)\r\n        user._id = Math.random()\r\n        return {\r\n            ...state,\r\n            users: [...state.users,user]\r\n        }\r\n    }\r\n\r\n    if(action.type === 'LOGGED_USER') {\r\n        // console.log(action.data)\r\n        // user.id = Math.random()\r\n        return {\r\n            ...state,\r\n            loggedIn: action.data.loggedIn,\r\n            name: action.data.name\r\n        }\r\n    }\r\n\r\n    if(action.type === 'SET_USERS') {\r\n        // console.log(action.users,\"yeah here you are\")\r\n        // user.id = Math.random()\r\n        return {\r\n            ...state,\r\n            users: action.users\r\n        }\r\n    }\r\n\r\n    return (\r\n        state\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux'\nimport rootReducer from './Reducers/rootReducer'\nimport 'antd/dist/antd.css';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}